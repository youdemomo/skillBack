<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.seckill_backend.mapper.OrderMapper">

    <!-- 创建订单 -->
    <insert id="insertOrder" parameterType="com.example.seckill_backend.model.Order" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO orders (user_id, status, total_price, created_at, updated_at)
        VALUES (#{userId}, #{status}, #{totalPrice}, #{createdAt}, #{updatedAt})
    </insert>

    <!-- 插入订单商品项 -->
    <insert id="insertOrderItem" parameterType="com.example.seckill_backend.model.OrderItem">
        INSERT INTO order_items (order_id, product_id, quantity, price)
        VALUES (#{orderId}, #{productId}, #{quantity}, #{price})
    </insert>

    <!-- 更新订单状态为取消 -->
    <update id="updateOrderStatusToCancelled" parameterType="Integer">
        UPDATE orders
        SET status = 'CANCELLED', updated_at = CURRENT_TIMESTAMP
        WHERE id = #{orderId} AND status = 'PENDING'
    </update>

    <!-- 获取订单商品项 -->
    <select id="getOrderItemsByOrderId" resultType="com.example.seckill_backend.model.OrderItem">
        SELECT id, order_id, product_id, quantity, price
        FROM order_items
        WHERE order_id = #{orderId}
    </select>

    <!-- 删除订单商品项 -->
    <delete id="deleteOrderItemsByOrderId" parameterType="Integer">
        DELETE FROM order_items WHERE order_id = #{orderId}
    </delete>

    <!-- 删除订单 -->
    <delete id="deleteOrderById" parameterType="Integer">
        DELETE FROM orders WHERE id = #{orderId}
    </delete>

    <!-- 恢复商品库存 -->
    <update id="updateProductStock" parameterType="map">
        UPDATE product
        SET stock = stock + #{quantity}
        WHERE id = #{productId}
    </update>

    <!-- 根据订单ID获取订单信息 -->
    <select id="getOrderById" resultType="com.example.seckill_backend.model.Order">
        SELECT id, user_id, status, total_price, created_at, updated_at
        FROM orders
        WHERE id = #{orderId}
    </select>

    <resultMap id="OrderResultMap" type="com.example.seckill_backend.model.Order">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="status" column="status"/>
        <result property="totalPrice" column="total_price"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <select id="getOrdersByUserId" resultMap="OrderResultMap">
        SELECT o.id, o.user_id, o.total_price, o.status, o.created_at, o.updated_at
        FROM orders o
        WHERE o.user_id = #{userId}
        ORDER BY o.created_at DESC
    </select>



<!--这是先显示订单表具体信息，然后再显示订单商品信息，然后显示商品具体信息-->
    <select id="getOrderDetails" resultMap="OrderDetailsResultMap">
        SELECT
        o.id AS order_id,
        o.user_id,
        o.status,
        o.total_price,
        o.created_at,
        o.updated_at,
        oi.id AS order_item_id,
        oi.product_id,
        oi.quantity,
        oi.price AS item_price,
        p.name AS product_name,
        p.description AS product_description,  <!-- 添加了商品描述 -->
        p.price AS product_price,
        p.stock AS product_stock,              <!-- 添加了商品库存 -->
        p.specifications AS product_specifications,  <!-- 添加了商品规格 -->
        p.image_url AS product_image_url       <!-- 添加了商品图片URL -->
        FROM orders o
        JOIN order_items oi ON o.id = oi.order_id
        JOIN product p ON oi.product_id = p.id
        WHERE o.id = #{orderId}
    </select>

    <resultMap id="OrderDetailsResultMap" type="com.example.seckill_backend.model.Order">
        <id property="id" column="order_id"/>
        <result property="userId" column="user_id"/>
        <result property="status" column="status"/>
        <result property="totalPrice" column="total_price"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <collection property="orderItems" ofType="com.example.seckill_backend.model.OrderItem">
            <id property="id" column="order_item_id"/>
            <result property="productId" column="product_id"/>
            <result property="quantity" column="quantity"/>
            <result property="price" column="item_price"/>
            <result property="product.name" column="product_name"/>
            <result property="product.description" column="product_description"/>  <!-- 映射商品描述 -->
            <result property="product.price" column="product_price"/>
            <result property="product.stock" column="product_stock"/>  <!-- 映射商品库存 -->
            <result property="product.specifications" column="product_specifications"/>  <!-- 映射商品规格 -->
            <result property="product.imageUrl" column="product_image_url"/>  <!-- 映射商品图片URL -->
        </collection>
    </resultMap>


</mapper>
